services:
  - postgres:12

variables:
  POSTGRES_DB: claypot
  POSTGRES_USER: ci
  POSTGRES_PASSWORD: "ci"

test:backend:
  image: python:3.8
  stage: test
  rules:
    - changes: &changes-in-backend
        - config/**
        - claypot/**
        - tox.ini
        - manage.py
        - tests/**
        - .gitlab-ci.yml
      when: always
  tags:
    - docker
  variables:
    DATABASE_URL: "postgresql://ci:ci@postgres/claypot"
    DJANGO_SECRET_KEY: running-tests
    DJANGO_DEBUG: "true"
  coverage: "/\\d+\\%\\s*$/"
  before_script:
    - python -V
    - pip install --cache-dir .cache/pip -r requirements/testing.txt
  script:
    - pytest --cov=claypot --cov-report=term --cov-report=html
  artifacts:
    expire_in: "1 week"
    when: always
    paths:
      - htmlcov
  cache:
    key: backend
    paths:
      - .cache/pip/

test:frontend:
  image: node:10-alpine
  stage: test
  rules:
    - changes:
        - frontend/**
        - .gitlab-ci.yml
      when: always
  tags:
    - docker
  before_script:
    - cd frontend
    - yarn install
  script:
    - yarn test:unit
    - node_modules/eslint/bin/eslint.js --ext .js,.vue src
  cache:
    key: frontend
    paths:
      - frontend/node_modules/

pages:
  stage: deploy
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  needs:
    - test:backend
  dependencies:
    - test:backend
  script:
    - mkdir .public
    - cp -r htmlcov .public/htmlcov-backend
    - echo '<html><head></head><body><ul><li><a href="htmlcov-backend/index.html">Backend Coverage Report</a></li></ul></body></html>' > .public/index.html
    - mv .public public
  artifacts:
    paths:
      - public

build:claypot:
  stage: build
  tags:
    - docker-cli
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes: *changes-in-backend
      when: always
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --pull -f compose/claypot/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  after_script:
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || /bin/true

build:nginx:
  stage: build
  tags:
    - docker-cli
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG -f compose/nginx/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG
  after_script:
    - docker rmi $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG || /bin/true

deploy:cooking.cryptec.at:
  stage: deploy
  environment:
    name: production/cooking.cryptec.at
    url: https://cooking.cryptec.at
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  tags:
    - docker
  image: ubuntu
  before_script:
    - apt-get update -qqy
    - apt-get install openssh-client -qqy
    - mkdir -p ~/.ssh
    - printf "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$COOKING_CRYPTEC_AT_SSH_PRIVATE_KEY")
  script:
    - ssh -t $COOKING_CRYPTEC_AT_SSH_USER@$COOKING_CRYPTEC_AT_SSH_HOST sudo /home/till/infrastructure/claypot/update.sh --version "$CI_COMMIT_REF_SLUG"
