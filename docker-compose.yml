version: '3'

services:
  caddy:
    image: dev.cryptec.at:5000/root/claypot/caddy:${CLAYPOT_VERSION:-master}
    build:
      context: .
      dockerfile: compose/caddy/Dockerfile
      args:
        plugins: git,filebrowser,cors,realip,expires,cache,prometheus
    ports:
      - "80:80"
    volumes:
      - media:/srv/media

  claypot:
    image: dev.cryptec.at:5000/root/claypot:${CLAYPOT_VERSION:-master}
    build: &build
      context: .
      dockerfile: compose/claypot/Dockerfile
    environment: &env
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS:-*}"
      DATABASE_URL: "postgresql://${POSTGRES_USER:-claypot}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB:-claypot}"
      POSTGRES_USER: ${POSTGRES_USER:-claypot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-claypot}
      SENTRY_DSN: ${SENTRY_DSN}
      EMAIL_URL: ${EMAIL_URL:-consolemail://}
      REDIS_HOST: "redis"
      MEDIA_ROOT: ${MEDIA_ROOT:-/media}
      IMAGE_ROOT: ${IMAGE_ROOT:-/images}
    volumes: &volumes
      - media:${MEDIA_ROOT:-/media}
      - images:${IMAGE_ROOT:-/images}

  db:
    image: postgres:alpine
    environment:
      <<: *env
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: always

  worker:
    image: dev.cryptec.at:5000/root/claypot:${CLAYPOT_VERSION:-master}
    command: ["python", "manage.py", "rqworker"]
    build:
      <<: *build
    environment:
      <<: *env
    volumes:
      <<: *volumes

volumes:
  db: {}
  redis-data: {}
